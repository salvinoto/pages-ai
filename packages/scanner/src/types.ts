export interface InteractiveElement {
  /**
   * A unique identifier generated by the scanner for this element within the current scanned set.
   */
  id: string;

  /**
   * A stable and unique CSS selector that can be used to reliably re-select the element on the page.
   */
  selector: string;

  /**
   * The HTML tag name of the element in lowercase (e.g., "input", "button", "a").
   */
  elementType: string;

  /**
   * The value of the element's `id` attribute. Null if not present.
   */
  elementId: string | null;

  /**
   * The value of the element's `name` attribute. Null if not present.
   */
  elementName: string | null;

  /**
   * The current value of the element, relevant for form controls.
   * For <input> elements (text, password, email, etc.) and <textarea>: element.value.
   * For <select>: The value of the currently selected <option>.
   * Null if not applicable.
   */
  currentValue: string | null;

  /**
   * For <a> elements or other link-like elements, the resolved absolute URL from the `href` attribute.
   * Null for non-link elements or links without an `href`.
   */
  href: string | null;

  /**
   * The value of the `placeholder` attribute, primarily for <input> and <textarea> elements.
   * Null if not present.
   */
  placeholder: string | null;

  /**
   * The concatenated text content from any associated <label> elements.
   * Null if no associated label is found.
   */
  labelText: string | null;

  /**
   * The value of the `aria-label` attribute on the element.
   * Null if not present.
   */
  ariaLabel: string | null;

  /**
   * The value of the `aria-labelledby` attribute (string of space-separated ID references).
   * Null if not present. The scanner should attempt to resolve these IDs for the accessibleName.
   */
  ariaLabelledBy: string | null;

  /**
   * The value of the `aria-describedby` attribute (string of space-separated ID references).
   * Null if not present. The scanner should attempt to resolve these IDs for additional context.
   */
  ariaDescribedBy: string | null;

  /**
   * The computed accessible name of the element, derived from aria-labelledby, aria-label,
   * associated <label>, element's own textContent, or title attribute.
   * Null if no name can be computed.
   */
  accessibleName: string | null;

  /**
   * The direct `textContent` of the element itself, trimmed.
   * Null if the element has no text content.
   */
  textContent: string | null;

  /**
   * The explicit ARIA `role` attribute value assigned to the element.
   * Null if no explicit `role` attribute is present.
   */
  role: string | null;

  /**
   * An array of strings indicating the reasons why this element was deemed interactive.
   * Examples: "tag:button", "aria-role:link", "event:onclick".
   */
  isInteractiveBy: string[];
}